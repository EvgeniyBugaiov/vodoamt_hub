---
- hosts: vodomat_hub
  become: true

  vars:
    share_uri: "{{ lookup('env', 'SHARE_URI') }}"
    share_username: "{{ lookup('env', 'SHARE_USERNAME') }}"
    share_password: "{{ lookup('env', 'SHARE_PASSWORD') }}"
    share_mountpoint: "/mnt/recorder"
    secret_key: "{{ lookup('env', 'SECRET_KEY')}}"
    database_name: "{{ lookup('env', 'DATABASE_NAME')}}"
    database_user: "{{ lookup('env', 'DATABASE_USER')}}"
    database_password: "{{ lookup('env', 'DATABASE_PASSWORD')}}"
    database_host: "{{ lookup('env', 'DATABASE_HOST')}}"

  tasks:

    - name: Upgrade all packages
      yum:
        name: '*'
        state: latest

    - name: Install requirements packages
      yum:
        name:
          - epel-release
          - yum-utils
          - python2-pip
          - device-mapper-persistent-data
          - lvm2
          - cifs-utils
          - git
          - python3
        state: present

    - name: Set timezone
      timezone:
        name: Europe/Kiev

    - name: Open http firewall port
      firewalld:
        service: http
        immediate: yes
        permanent: true
        state: enabled

    - name: Add docker-ce repository
      yum_repository:
        name: Docker-CE
        description: Stable Docker CE repository
        baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
        gpgkey: https://download.docker.com/linux/centos/gpg
        gpgcheck: true

    - name: Install docker-ce
      yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Install docker-compose from official github repo
      get_url:
        url : https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'

    - name: Start docker and enable it on reboot
      service: name=docker state=started enabled=true

    # !!! To avoid error with docker python package
    - name: Install websocket-client python package
      pip:
        name: websocket-client
        version: 0.56.0

    - name: Install docker python package
      pip:
        name: docker
        version: 4.1.0 # For python2.7 version before 5.0.0

    - name: Start gitlab-runner docker container
      docker_container:
        name: gitlab-runner
        state: started
        image: gitlab/gitlab-runner:latest
        network_mode: host
        restart_policy: always
        volumes:
          - /srv/gitlab-runner/config:/etc/gitlab-runner
          - /var/run/docker.sock:/var/run/docker.sock

# recorder ---------------------------------------------------------------------
    # - name: Share mountpoint exist
    #   file:
    #     path: "{{ share_mountpoint }}"
    #     state: directory
    #     mode: "0755"
    #
    # - name: Mount recorder share
    #   mount:
    #     src: "{{ share_uri }}"
    #     path: "{{ share_mountpoint }}"
    #     fstype: cifs
    #     opts: "username={{ share_username }},password={{ share_password }}"
    #     state: mounted
    #
    # - name: Clone vodomat_recorder repo
    #   git:
    #     repo: https://github.com/EvgeniyBugaiov/vodomat_recorder.git
    #     dest: ~/vodomat_recorder
    #
    # - name: Add vodomat_recorder archive script to cron
    #   cron:
    #     name: "Add O, Z, X reports to archives"
    #     minute: "0"
    #     hour: "1"
    #     job: "python3 ~/vodomat_recorder/archive.py"

# vodomat_server_admin ---------------------------------------------------------
    - name: Clone vodomat_server_admin repo
      git:
        repo: https://github.com/EvgeniyBugaiov/vodomat_server_admin.git
        dest: ~/vodomat_server_admin

    - name: Create .env file
      template:
        src: .env.j2
        dest: ~/vodomat_server_admin/.env

    - name: Run vodomat_server_admin docker-compose
      shell:
        cmd: "docker-compose up --build -d"
        chdir: ~/vodomat_server_admin

# vodomat_api ------------------------------------------------------------------
    - name: Clone vodomat_api repo
      git:
        repo: https://github.com/EvgeniyBugaiov/vodomat_api.git
        dest: ~/vodomat_api

    - name: Create .env file
      template:
        src: .env.j2
        dest: ~/vodomat_api/.env

    - name: Run vodomat_api docker-compose
      shell:
        cmd: "docker-compose up --build -d"
        chdir: ~/vodomat_api

# nginx ------------------------------------------------------------------------
    - name: Copy nginx folder
      copy:
        src: "{{ playbook_dir }}/../nginx"
        dest: "~"

    - name: Run nginx container
      shell:
        cmd: "docker-compose up --build -d"
        chdir: ~/nginx
